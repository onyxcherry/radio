name: radio
networks:
  redpanda_network:
    driver: bridge
volumes:
  redpanda-0: null
  player-database: null
secrets:
  youtube_api_key:
    file: ./.youtube-api-key.secret
services:
  init-backend:
    container_name: init-backend
    build:
      context: backend/
    env_file:
      - ./.env.compose
    command: python initialize.py
    volumes:
      - ./backend/sql_app.db:/app/sql_app.db
      - ./backend/config.yaml:/app/config.yaml:ro
    networks:
      - redpanda_network
    depends_on:
      redpanda-0:
        condition: service_healthy
  backend:
    container_name: backend
    build:
      context: backend/
    env_file:
      - ./.env.compose
    secrets:
      - youtube_api_key
    ports:
      - 8000:8000
    volumes:
      - ./backend/sql_app.db:/app/db/sql_app.db
      - ./backend/config.yaml:/app/config.yaml:ro
    networks:
      - redpanda_network
    depends_on:
      init-backend:
        condition: service_completed_successfully
  init-player:
    container_name: init-player
    build:
      context: player/
    command: python initialize.py
    volumes:
      - ./player/player.db:/app/player.db
  player:
    container_name: player
    build:
      context: player/
    env_file:
      - ./.env.compose
    # WSL2 - uncomment below 2 lines to play music within container
    # environment:
    #   PULSE_SERVER: /mnt/wslg/PulseServer
    ports:
      - 5000:5000
    volumes:
      - ./player/player.db:/app/db/player.db
      - ./player/config.yaml:/app/config.yaml:ro
      - ./player/data/:/app/data/
      # WSL2 - uncomment below line to play music within container
      # - /mnt/wslg/:/mnt/wslg/
    networks:
      - redpanda_network
    depends_on:
      init-backend:
        condition: service_completed_successfully
      init-player:
        condition: service_completed_successfully
  redpanda-0:
    container_name: redpanda-broker-0
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.9
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "http://localhost:9644/v1/status/ready"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 7s
  console:
    container_name: redpanda-broker-console
    image: docker.redpanda.com/redpandadata/console:v2.6.0
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      redpanda-0:
        condition: service_healthy
