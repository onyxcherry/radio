name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, player]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install isort~=6.0.1 black~=25.1.0 flake8~=7.1.2

      - name: Run black (check mode)
        run: black --check --diff ${{ matrix.service }}

      - name: Run isort (check mode)
        run: isort --check-only --diff ${{ matrix.service }}

      - name: Run flake8
        run: flake8 --config ${{ matrix.service }}/.flake8 ${{ matrix.service }}

  tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run backend unit tests
        run: docker compose -f docker-compose.tests.yaml up --abort-on-container-failure backend-units 

      - name: Run player unit tests
        run: docker compose -f docker-compose.tests.yaml up --abort-on-container-failure player-units

      - name: Run backend integration tests
        run: docker compose -f docker-compose.tests.yaml up --abort-on-container-failure backend-integration

      - name: Run player integration tests
        run: docker compose -f docker-compose.tests.yaml up --abort-on-container-failure player-integration

      - name: Stop services
        run: docker compose -f docker-compose.tests.yaml down --volumes --rmi local
